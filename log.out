Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding type registration boolean -> org.hibernate.type.BooleanType@7a6d7e92
Adding type registration boolean -> org.hibernate.type.BooleanType@7a6d7e92
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a6d7e92
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@782859e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@58e1d9d
Adding type registration yes_no -> org.hibernate.type.YesNoType@5340477f
Adding type registration byte -> org.hibernate.type.ByteType@5c7bfdc1
Adding type registration byte -> org.hibernate.type.ByteType@5c7bfdc1
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5c7bfdc1
Adding type registration character -> org.hibernate.type.CharacterType@7bbc8656
Adding type registration char -> org.hibernate.type.CharacterType@7bbc8656
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7bbc8656
Adding type registration short -> org.hibernate.type.ShortType@66ea810
Adding type registration short -> org.hibernate.type.ShortType@66ea810
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@66ea810
Adding type registration integer -> org.hibernate.type.IntegerType@d2de489
Adding type registration int -> org.hibernate.type.IntegerType@d2de489
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@d2de489
Adding type registration long -> org.hibernate.type.LongType@37313c65
Adding type registration long -> org.hibernate.type.LongType@37313c65
Adding type registration java.lang.Long -> org.hibernate.type.LongType@37313c65
Adding type registration float -> org.hibernate.type.FloatType@6e2aa843
Adding type registration float -> org.hibernate.type.FloatType@6e2aa843
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6e2aa843
Adding type registration double -> org.hibernate.type.DoubleType@2f67a4d3
Adding type registration double -> org.hibernate.type.DoubleType@2f67a4d3
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f67a4d3
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@503f91c3
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@503f91c3
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10289886
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10289886
Adding type registration string -> org.hibernate.type.StringType@2438dcd
Adding type registration java.lang.String -> org.hibernate.type.StringType@2438dcd
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28194a50
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4b8729ff
Adding type registration url -> org.hibernate.type.UrlType@68878f6d
Adding type registration java.net.URL -> org.hibernate.type.UrlType@68878f6d
Adding type registration date -> org.hibernate.type.DateType@4c2bb6e0
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4c2bb6e0
Adding type registration time -> org.hibernate.type.TimeType@2ca26d77
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2ca26d77
Adding type registration timestamp -> org.hibernate.type.TimestampType@456d6c1e
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@456d6c1e
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@456d6c1e
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@452e19ca
Adding type registration calendar -> org.hibernate.type.CalendarType@4bc222e
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4bc222e
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4bc222e
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@43015c69
Adding type registration locale -> org.hibernate.type.LocaleType@26adfd2d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@26adfd2d
Adding type registration currency -> org.hibernate.type.CurrencyType@189cbd7c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@189cbd7c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5e21e98f
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5e21e98f
Adding type registration class -> org.hibernate.type.ClassType@23202fce
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@23202fce
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@495ee280
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@495ee280
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f627d13
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5f77d0f9
Adding type registration binary -> org.hibernate.type.BinaryType@6736fa8d
Adding type registration byte[] -> org.hibernate.type.BinaryType@6736fa8d
Adding type registration [B -> org.hibernate.type.BinaryType@6736fa8d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11d8ae8b
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11d8ae8b
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11d8ae8b
Adding type registration image -> org.hibernate.type.ImageType@2fba3fc4
Adding type registration characters -> org.hibernate.type.CharArrayType@6a57ae10
Adding type registration char[] -> org.hibernate.type.CharArrayType@6a57ae10
Adding type registration [C -> org.hibernate.type.CharArrayType@6a57ae10
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@797b0699
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@797b0699
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@797b0699
Adding type registration text -> org.hibernate.type.TextType@29a5f4e7
Adding type registration ntext -> org.hibernate.type.NTextType@27508c5d
Adding type registration blob -> org.hibernate.type.BlobType@3e2059ae
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e2059ae
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1b8a29df
Adding type registration clob -> org.hibernate.type.ClobType@78aa1f72
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78aa1f72
Adding type registration nclob -> org.hibernate.type.NClobType@40317ba2
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@40317ba2
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@39d9314d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2ce6c6ec
Adding type registration serializable -> org.hibernate.type.SerializableType@50dfbc58
Adding type registration object -> org.hibernate.type.ObjectType@68d279ec
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68d279ec
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@176b75f7
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5965be2d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@409c54f
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e74829
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4f6f416f
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b8f0a79
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@71e693fa
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@48793bef
HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
HHH000412: Hibernate Core {4.3.7.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH000043: Configuring from resource: /hibernate.cfg.xml
HHH000040: Configuration resource: /hibernate.cfg.xml
Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
hibernate.dialect=org.hibernate.dialect.MySQLDialect
hibernate.connection.driver_class=com.mysql.jdbc.Driver
hibernate.connection.url=jdbc:mysql://localhost/sql457634
hibernate.connection.username=root
hibernate.connection.password=
Session-factory config [null] named resource [User.hbm.xml] for mapping
HHH000221: Reading mappings from resource: User.hbm.xml
Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
Located [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd] in classpath
Session-factory config [null] named resource [Bet.hbm.xml] for mapping
HHH000221: Reading mappings from resource: Bet.hbm.xml
Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
Located [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd] in classpath
HHH000041: Configured SessionFactory: null
Properties: {hibernate.connection.password=, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jre8\bin, java.vm.version=25.5-b02, hibernate.connection.username=root, user.country.format=MT, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Brian\Documents\University\Third Year\Software Testing\Software.Testing, java.runtime.version=1.8.0_05-b13, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jre8\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\Brian\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jre8\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\iis express\PHP\v5.3;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\MATLAB\R2012b\runtime\win64;C:\Program Files\MATLAB\R2012b\bin;C:\Program Files\Microsoft Windows Performance Toolkit\;C:\Program Files (x86)\MiKTeX 2.9\miktex\bin\;C:\Program Files (x86)\Java\jdk1.8.0_05\bin;C:\Program Files (x86)\Java\jre7\bin;C:\Program Files (x86)\Java\jdk1.8.0_05\bin;c:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\OpenVPN\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.2.3\bin;C:\Program Files\Java\jdk1.7.0_51\bin;C:\Windows\Microsoft.NET\Framework\v4.0.30319;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\Brian, user.timezone=Europe/Berlin, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1252, java.specification.version=1.8, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.class.path=C:\Users\Brian\Documents\University\Third Year\Software Testing\Software.Testing\target\test-classes;C:\Users\Brian\Documents\University\Third Year\Software Testing\Software.Testing\target\classes;C:\Users\Brian\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\Brian\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Brian\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Brian\.m2\repository\org\hibernate\hibernate-core\4.3.7.Final\hibernate-core-4.3.7.Final.jar;C:\Users\Brian\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\Brian\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\Brian\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\Brian\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Brian\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Brian\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\Brian\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Brian\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\Brian\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Brian\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\Brian\.m2\repository\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;C:\Users\Brian\.m2\repository\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;C:\Users\Brian\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Brian\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\Brian\.m2\repository\org\apache\commons\commons-lang3\3.0\commons-lang3-3.0.jar;C:\Users\Brian\.m2\repository\joda-time\joda-time\2.5\joda-time-2.5.jar;C:\Users\Brian\.m2\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;C:\Users\Brian\.m2\repository\info\cukes\cucumber-java\1.2.0\cucumber-java-1.2.0.jar;C:\Users\Brian\.m2\repository\info\cukes\cucumber-core\1.2.0\cucumber-core-1.2.0.jar;C:\Users\Brian\.m2\repository\info\cukes\cucumber-html\0.2.3\cucumber-html-0.2.3.jar;C:\Users\Brian\.m2\repository\info\cukes\cucumber-junit\1.2.0\cucumber-junit-1.2.0.jar;C:\Users\Brian\.m2\repository\info\cukes\cucumber-picocontainer\1.2.0\cucumber-picocontainer-1.2.0.jar;C:\Users\Brian\.m2\repository\info\cukes\cucumber-jvm-deps\1.0.3\cucumber-jvm-deps-1.0.3.jar;C:\Users\Brian\.m2\repository\info\cukes\gherkin\2.12.2\gherkin-2.12.2.jar;C:\Users\Brian\.m2\repository\org\picocontainer\picocontainer\2.15\picocontainer-2.15.jar;C:\Users\Brian\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\2.44.0\selenium-firefox-driver-2.44.0.jar;C:\Users\Brian\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\2.44.0\selenium-remote-driver-2.44.0.jar;C:\Users\Brian\.m2\repository\cglib\cglib-nodep\2.1_3\cglib-nodep-2.1_3.jar;C:\Users\Brian\.m2\repository\com\google\code\gson\gson\2.3\gson-2.3.jar;C:\Users\Brian\.m2\repository\org\seleniumhq\selenium\selenium-api\2.44.0\selenium-api-2.44.0.jar;C:\Users\Brian\.m2\repository\org\apache\httpcomponents\httpclient\4.3.4\httpclient-4.3.4.jar;C:\Users\Brian\.m2\repository\org\apache\httpcomponents\httpcore\4.3.2\httpcore-4.3.2.jar;C:\Users\Brian\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Brian\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Brian\.m2\repository\com\google\guava\guava\18.0\guava-18.0.jar;C:\Users\Brian\.m2\repository\net\java\dev\jna\jna\3.4.0\jna-3.4.0.jar;C:\Users\Brian\.m2\repository\net\java\dev\jna\platform\3.4.0\platform-3.4.0.jar;C:\Users\Brian\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\Brian\.m2\repository\org\apache\commons\commons-exec\1.1\commons-exec-1.1.jar;C:\Users\Brian\.m2\repository\org\seleniumhq\selenium\selenium-support\2.44.0\selenium-support-2.44.0.jar;C:\Users\Brian\.m2\repository\nz\ac\waikato\modeljunit\modeljunit\2.5\modeljunit-2.5.jar;C:\Users\Brian\.m2\repository\asm\asm\3.1\asm-3.1.jar;C:\Users\Brian\.m2\repository\net\sf\jung\jung-algorithms\2.0.1\jung-algorithms-2.0.1.jar;C:\Users\Brian\.m2\repository\net\sourceforge\collections\collections-generic\4.01\collections-generic-4.01.jar;C:\Users\Brian\.m2\repository\colt\colt\1.2.0\colt-1.2.0.jar;C:\Users\Brian\.m2\repository\concurrent\concurrent\1.3.4\concurrent-1.3.4.jar;C:\Users\Brian\.m2\repository\net\sf\jung\jung-api\2.0.1\jung-api-2.0.1.jar;C:\Users\Brian\.m2\repository\net\sf\jung\jung-graph-impl\2.0.1\jung-graph-impl-2.0.1.jar;C:\Users\Brian\.m2\repository\net\sf\jung\jung-io\2.0.1\jung-io-2.0.1.jar;C:\Users\Brian\.m2\repository\org\codehaus\woodstox\wstx-asl\3.2.6\wstx-asl-3.2.6.jar;C:\Users\Brian\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\Brian\.m2\repository\net\sf\jung\jung-jai\2.0.1\jung-jai-2.0.1.jar;C:\Users\Brian\.m2\repository\net\sf\jung\jung-visualization\2.0.1\jung-visualization-2.0.1.jar;C:\Users\Brian\.m2\repository\org\uispec4j\uispec4j\2.4\uispec4j-2.4-jdk16.jar;/C:/Program Files (x86)/eclipse-standard-kepler-SR2-win32-x86_64/eclipse/configuration/org.eclipse.osgi/bundles/846/1/.cp/;/C:/Program Files (x86)/eclipse-standard-kepler-SR2-win32-x86_64/eclipse/configuration/org.eclipse.osgi/bundles/845/1/.cp/;C:\Program Files (x86)\eclipse-standard-kepler-SR2-win32-x86_64\eclipse\configuration\org.eclipse.osgi\bundles\1431\1\.cp\jacocoagent.jar, user.name=Brian, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.8, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 33190 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -testNameFile C:\Users\Brian\AppData\Local\Temp\testNames8558871253139160514.txt, java.home=C:\Program Files\Java\jre8, sun.arch.data.model=64, hibernate.connection.url=jdbc:mysql://localhost/sql457634, hibernate.dialect=org.hibernate.dialect.MySQLDialect, user.language=en, java.specification.vendor=Oracle Corporation, user.language.format=mt, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_05, java.ext.dirs=C:\Program Files\Java\jre8\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre8\lib\resources.jar;C:\Program Files\Java\jre8\lib\rt.jar;C:\Program Files\Java\jre8\lib\sunrsasign.jar;C:\Program Files\Java\jre8\lib\jsse.jar;C:\Program Files\Java\jre8\lib\jce.jar;C:\Program Files\Java\jre8\lib\charsets.jar;C:\Program Files\Java\jre8\lib\jfr.jar;C:\Program Files\Java\jre8\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Preparing to build session factory with filters : {}
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost/sql457634]
HHH000046: Connection properties: {user=root, password=}
HHH000006: Autocommit mode: false
HHH000115: Hibernate connection pool size: 20 (min=1)
Initializing Connection pool with 1 Connections
Database ->
       name : MySQL
    version : 5.6.20
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Processing hbm.xml files
Mapping class: persistant.User -> user
Mapped property: username -> username
Mapped property: password -> password
Mapped property: name -> name
Mapped property: surname -> surname
Mapped property: dob -> dob
Mapped property: creditCardNumber -> credit_card_number
Mapped property: expiry -> expiry_date
Mapped property: cvv -> cvv
Mapped property: premium -> premium
Mapped property: free -> free
Mapped property: failedLogins -> failed_login
Mapped property: lockedTill -> locked_till
Mapping class: persistant.Bet -> bet
Mapped property: id -> bet_id
Mapped property: riskLevel -> risk_level
Mapped property: amount -> amount
Mapped property: userName -> user_id
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000399: Using default transaction strategy (direct JDBC transactions)
Using BatchFetchStyle : LEGACY
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Default null ordering: none
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: disabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
JTA Track by Thread: enabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=, sun.boot.library.path=C:\Program Files\Java\jre8\bin, java.vm.version=25.5-b02, hibernate.connection.username=root, user.country.format=MT, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Brian\Documents\University\Third Year\Software Testing\Software.Testing, java.runtime.version=1.8.0_05-b13, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jre8\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\Brian\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jre8\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\iis express\PHP\v5.3;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\MATLAB\R2012b\runtime\win64;C:\Program Files\MATLAB\R2012b\bin;C:\Program Files\Microsoft Windows Performance Toolkit\;C:\Program Files (x86)\MiKTeX 2.9\miktex\bin\;C:\Program Files (x86)\Java\jdk1.8.0_05\bin;C:\Program Files (x86)\Java\jre7\bin;C:\Program Files (x86)\Java\jdk1.8.0_05\bin;c:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\OpenVPN\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.2.3\bin;C:\Program Files\Java\jdk1.7.0_51\bin;C:\Windows\Microsoft.NET\Framework\v4.0.30319;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\Brian, user.timezone=Europe/Berlin, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=Cp1252, hibernate.connection.driver_class=com.mysql.jdbc.Driver, user.name=Brian, java.class.path=C:\Users\Brian\Documents\University\Third Year\Software Testing\Software.Testing\target\test-classes;C:\Users\Brian\Documents\University\Third Year\Software Testing\Software.Testing\target\classes;C:\Users\Brian\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\Brian\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Brian\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Brian\.m2\repository\org\hibernate\hibernate-core\4.3.7.Final\hibernate-core-4.3.7.Final.jar;C:\Users\Brian\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\Brian\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\Brian\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\Brian\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Brian\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Brian\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\Brian\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Brian\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\Brian\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Brian\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\Brian\.m2\repository\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;C:\Users\Brian\.m2\repository\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;C:\Users\Brian\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Brian\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\Brian\.m2\repository\org\apache\commons\commons-lang3\3.0\commons-lang3-3.0.jar;C:\Users\Brian\.m2\repository\joda-time\joda-time\2.5\joda-time-2.5.jar;C:\Users\Brian\.m2\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;C:\Users\Brian\.m2\repository\info\cukes\cucumber-java\1.2.0\cucumber-java-1.2.0.jar;C:\Users\Brian\.m2\repository\info\cukes\cucumber-core\1.2.0\cucumber-core-1.2.0.jar;C:\Users\Brian\.m2\repository\info\cukes\cucumber-html\0.2.3\cucumber-html-0.2.3.jar;C:\Users\Brian\.m2\repository\info\cukes\cucumber-junit\1.2.0\cucumber-junit-1.2.0.jar;C:\Users\Brian\.m2\repository\info\cukes\cucumber-picocontainer\1.2.0\cucumber-picocontainer-1.2.0.jar;C:\Users\Brian\.m2\repository\info\cukes\cucumber-jvm-deps\1.0.3\cucumber-jvm-deps-1.0.3.jar;C:\Users\Brian\.m2\repository\info\cukes\gherkin\2.12.2\gherkin-2.12.2.jar;C:\Users\Brian\.m2\repository\org\picocontainer\picocontainer\2.15\picocontainer-2.15.jar;C:\Users\Brian\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\2.44.0\selenium-firefox-driver-2.44.0.jar;C:\Users\Brian\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\2.44.0\selenium-remote-driver-2.44.0.jar;C:\Users\Brian\.m2\repository\cglib\cglib-nodep\2.1_3\cglib-nodep-2.1_3.jar;C:\Users\Brian\.m2\repository\com\google\code\gson\gson\2.3\gson-2.3.jar;C:\Users\Brian\.m2\repository\org\seleniumhq\selenium\selenium-api\2.44.0\selenium-api-2.44.0.jar;C:\Users\Brian\.m2\repository\org\apache\httpcomponents\httpclient\4.3.4\httpclient-4.3.4.jar;C:\Users\Brian\.m2\repository\org\apache\httpcomponents\httpcore\4.3.2\httpcore-4.3.2.jar;C:\Users\Brian\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Brian\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Brian\.m2\repository\com\google\guava\guava\18.0\guava-18.0.jar;C:\Users\Brian\.m2\repository\net\java\dev\jna\jna\3.4.0\jna-3.4.0.jar;C:\Users\Brian\.m2\repository\net\java\dev\jna\platform\3.4.0\platform-3.4.0.jar;C:\Users\Brian\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\Brian\.m2\repository\org\apache\commons\commons-exec\1.1\commons-exec-1.1.jar;C:\Users\Brian\.m2\repository\org\seleniumhq\selenium\selenium-support\2.44.0\selenium-support-2.44.0.jar;C:\Users\Brian\.m2\repository\nz\ac\waikato\modeljunit\modeljunit\2.5\modeljunit-2.5.jar;C:\Users\Brian\.m2\repository\asm\asm\3.1\asm-3.1.jar;C:\Users\Brian\.m2\repository\net\sf\jung\jung-algorithms\2.0.1\jung-algorithms-2.0.1.jar;C:\Users\Brian\.m2\repository\net\sourceforge\collections\collections-generic\4.01\collections-generic-4.01.jar;C:\Users\Brian\.m2\repository\colt\colt\1.2.0\colt-1.2.0.jar;C:\Users\Brian\.m2\repository\concurrent\concurrent\1.3.4\concurrent-1.3.4.jar;C:\Users\Brian\.m2\repository\net\sf\jung\jung-api\2.0.1\jung-api-2.0.1.jar;C:\Users\Brian\.m2\repository\net\sf\jung\jung-graph-impl\2.0.1\jung-graph-impl-2.0.1.jar;C:\Users\Brian\.m2\repository\net\sf\jung\jung-io\2.0.1\jung-io-2.0.1.jar;C:\Users\Brian\.m2\repository\org\codehaus\woodstox\wstx-asl\3.2.6\wstx-asl-3.2.6.jar;C:\Users\Brian\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\Brian\.m2\repository\net\sf\jung\jung-jai\2.0.1\jung-jai-2.0.1.jar;C:\Users\Brian\.m2\repository\net\sf\jung\jung-visualization\2.0.1\jung-visualization-2.0.1.jar;C:\Users\Brian\.m2\repository\org\uispec4j\uispec4j\2.4\uispec4j-2.4-jdk16.jar;/C:/Program Files (x86)/eclipse-standard-kepler-SR2-win32-x86_64/eclipse/configuration/org.eclipse.osgi/bundles/846/1/.cp/;/C:/Program Files (x86)/eclipse-standard-kepler-SR2-win32-x86_64/eclipse/configuration/org.eclipse.osgi/bundles/845/1/.cp/;C:\Program Files (x86)\eclipse-standard-kepler-SR2-win32-x86_64\eclipse\configuration\org.eclipse.osgi\bundles\1431\1\.cp\jacocoagent.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jre8, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 33190 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -testNameFile C:\Users\Brian\AppData\Local\Temp\testNames8558871253139160514.txt, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://localhost/sql457634, java.specification.vendor=Oracle Corporation, user.language=en, user.language.format=mt, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_05, java.ext.dirs=C:\Program Files\Java\jre8\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre8\lib\resources.jar;C:\Program Files\Java\jre8\lib\rt.jar;C:\Program Files\Java\jre8\lib\sunrsasign.jar;C:\Program Files\Java\jre8\lib\jsse.jar;C:\Program Files\Java\jre8\lib\jce.jar;C:\Program Files\Java\jre8\lib\charsets.jar;C:\Program Files\Java\jre8\lib\jfr.jar;C:\Program Files\Java\jre8\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
Skipping JACC integration as it was not enabled
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: persistant.User
 Version select: select username from user where username =?
 Snapshot select: select user_.username, user_.password as password2_1_, user_.name as name3_1_, user_.surname as surname4_1_, user_.dob as dob5_1_, user_.credit_card_number as credit_c6_1_, user_.expiry_date as expiry_d7_1_, user_.cvv as cvv8_1_, user_.premium as premium9_1_, user_.free as free10_1_, user_.failed_login as failed_11_1_, user_.locked_till as locked_12_1_ from user user_ where user_.username=?
 Insert 0: insert into user (password, name, surname, dob, credit_card_number, expiry_date, cvv, premium, free, failed_login, locked_till, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update user set password=?, name=?, surname=?, dob=?, credit_card_number=?, expiry_date=?, cvv=?, premium=?, free=?, failed_login=?, locked_till=? where username=?
 Delete 0: delete from user where username=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27960b1e]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_1_0_}

Static select for entity persistant.User [NONE]: select user0_.username as username1_1_0_, user0_.password as password2_1_0_, user0_.name as name3_1_0_, user0_.surname as surname4_1_0_, user0_.dob as dob5_1_0_, user0_.credit_card_number as credit_c6_1_0_, user0_.expiry_date as expiry_d7_1_0_, user0_.cvv as cvv8_1_0_, user0_.premium as premium9_1_0_, user0_.free as free10_1_0_, user0_.failed_login as failed_11_1_0_, user0_.locked_till as locked_12_1_0_ from user user0_ where user0_.username=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a6c0f38]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_1_0_}

Static select for entity persistant.User [READ]: select user0_.username as username1_1_0_, user0_.password as password2_1_0_, user0_.name as name3_1_0_, user0_.surname as surname4_1_0_, user0_.dob as dob5_1_0_, user0_.credit_card_number as credit_c6_1_0_, user0_.expiry_date as expiry_d7_1_0_, user0_.cvv as cvv8_1_0_, user0_.premium as premium9_1_0_, user0_.free as free10_1_0_, user0_.failed_login as failed_11_1_0_, user0_.locked_till as locked_12_1_0_ from user user0_ where user0_.username=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26d5a317]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_1_0_}

Static select for entity persistant.User [UPGRADE]: select user0_.username as username1_1_0_, user0_.password as password2_1_0_, user0_.name as name3_1_0_, user0_.surname as surname4_1_0_, user0_.dob as dob5_1_0_, user0_.credit_card_number as credit_c6_1_0_, user0_.expiry_date as expiry_d7_1_0_, user0_.cvv as cvv8_1_0_, user0_.premium as premium9_1_0_, user0_.free as free10_1_0_, user0_.failed_login as failed_11_1_0_, user0_.locked_till as locked_12_1_0_ from user user0_ where user0_.username=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a090f62]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_1_0_}

Static select for entity persistant.User [UPGRADE_NOWAIT]: select user0_.username as username1_1_0_, user0_.password as password2_1_0_, user0_.name as name3_1_0_, user0_.surname as surname4_1_0_, user0_.dob as dob5_1_0_, user0_.credit_card_number as credit_c6_1_0_, user0_.expiry_date as expiry_d7_1_0_, user0_.cvv as cvv8_1_0_, user0_.premium as premium9_1_0_, user0_.free as free10_1_0_, user0_.failed_login as failed_11_1_0_, user0_.locked_till as locked_12_1_0_ from user user0_ where user0_.username=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5edc3e29]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_1_0_}

Static select for entity persistant.User [UPGRADE_SKIPLOCKED]: select user0_.username as username1_1_0_, user0_.password as password2_1_0_, user0_.name as name3_1_0_, user0_.surname as surname4_1_0_, user0_.dob as dob5_1_0_, user0_.credit_card_number as credit_c6_1_0_, user0_.expiry_date as expiry_d7_1_0_, user0_.cvv as cvv8_1_0_, user0_.premium as premium9_1_0_, user0_.free as free10_1_0_, user0_.failed_login as failed_11_1_0_, user0_.locked_till as locked_12_1_0_ from user user0_ where user0_.username=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a90e2c1]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_1_0_}

Static select for entity persistant.User [FORCE]: select user0_.username as username1_1_0_, user0_.password as password2_1_0_, user0_.name as name3_1_0_, user0_.surname as surname4_1_0_, user0_.dob as dob5_1_0_, user0_.credit_card_number as credit_c6_1_0_, user0_.expiry_date as expiry_d7_1_0_, user0_.cvv as cvv8_1_0_, user0_.premium as premium9_1_0_, user0_.free as free10_1_0_, user0_.failed_login as failed_11_1_0_, user0_.locked_till as locked_12_1_0_ from user user0_ where user0_.username=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@370ef50b]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_1_0_}

Static select for entity persistant.User [PESSIMISTIC_READ]: select user0_.username as username1_1_0_, user0_.password as password2_1_0_, user0_.name as name3_1_0_, user0_.surname as surname4_1_0_, user0_.dob as dob5_1_0_, user0_.credit_card_number as credit_c6_1_0_, user0_.expiry_date as expiry_d7_1_0_, user0_.cvv as cvv8_1_0_, user0_.premium as premium9_1_0_, user0_.free as free10_1_0_, user0_.failed_login as failed_11_1_0_, user0_.locked_till as locked_12_1_0_ from user user0_ where user0_.username=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@268c030f]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_1_0_}

Static select for entity persistant.User [PESSIMISTIC_WRITE]: select user0_.username as username1_1_0_, user0_.password as password2_1_0_, user0_.name as name3_1_0_, user0_.surname as surname4_1_0_, user0_.dob as dob5_1_0_, user0_.credit_card_number as credit_c6_1_0_, user0_.expiry_date as expiry_d7_1_0_, user0_.cvv as cvv8_1_0_, user0_.premium as premium9_1_0_, user0_.free as free10_1_0_, user0_.failed_login as failed_11_1_0_, user0_.locked_till as locked_12_1_0_ from user user0_ where user0_.username=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@be164d8]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_1_0_}

Static select for entity persistant.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.username as username1_1_0_, user0_.password as password2_1_0_, user0_.name as name3_1_0_, user0_.surname as surname4_1_0_, user0_.dob as dob5_1_0_, user0_.credit_card_number as credit_c6_1_0_, user0_.expiry_date as expiry_d7_1_0_, user0_.cvv as cvv8_1_0_, user0_.premium as premium9_1_0_, user0_.free as free10_1_0_, user0_.failed_login as failed_11_1_0_, user0_.locked_till as locked_12_1_0_ from user user0_ where user0_.username=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5df6163a]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_1_0_}

Static select for entity persistant.User [OPTIMISTIC]: select user0_.username as username1_1_0_, user0_.password as password2_1_0_, user0_.name as name3_1_0_, user0_.surname as surname4_1_0_, user0_.dob as dob5_1_0_, user0_.credit_card_number as credit_c6_1_0_, user0_.expiry_date as expiry_d7_1_0_, user0_.cvv as cvv8_1_0_, user0_.premium as premium9_1_0_, user0_.free as free10_1_0_, user0_.failed_login as failed_11_1_0_, user0_.locked_till as locked_12_1_0_ from user user0_ where user0_.username=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2df65a56]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_1_0_}

Static select for entity persistant.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.username as username1_1_0_, user0_.password as password2_1_0_, user0_.name as name3_1_0_, user0_.surname as surname4_1_0_, user0_.dob as dob5_1_0_, user0_.credit_card_number as credit_c6_1_0_, user0_.expiry_date as expiry_d7_1_0_, user0_.cvv as cvv8_1_0_, user0_.premium as premium9_1_0_, user0_.free as free10_1_0_, user0_.failed_login as failed_11_1_0_, user0_.locked_till as locked_12_1_0_ from user user0_ where user0_.username=?
Static select for action ACTION_MERGE on entity persistant.User: select user0_.username as username1_1_0_, user0_.password as password2_1_0_, user0_.name as name3_1_0_, user0_.surname as surname4_1_0_, user0_.dob as dob5_1_0_, user0_.credit_card_number as credit_c6_1_0_, user0_.expiry_date as expiry_d7_1_0_, user0_.cvv as cvv8_1_0_, user0_.premium as premium9_1_0_, user0_.free as free10_1_0_, user0_.failed_login as failed_11_1_0_, user0_.locked_till as locked_12_1_0_ from user user0_ where user0_.username=?
Static select for action ACTION_REFRESH on entity persistant.User: select user0_.username as username1_1_0_, user0_.password as password2_1_0_, user0_.name as name3_1_0_, user0_.surname as surname4_1_0_, user0_.dob as dob5_1_0_, user0_.credit_card_number as credit_c6_1_0_, user0_.expiry_date as expiry_d7_1_0_, user0_.cvv as cvv8_1_0_, user0_.premium as premium9_1_0_, user0_.free as free10_1_0_, user0_.failed_login as failed_11_1_0_, user0_.locked_till as locked_12_1_0_ from user user0_ where user0_.username=?
Static SQL for entity: persistant.Bet
 Version select: select bet_id from bet where bet_id =?
 Snapshot select: select bet_.bet_id, bet_.risk_level as risk_lev2_0_, bet_.amount as amount3_0_, bet_.user_id as user_id4_0_ from bet bet_ where bet_.bet_id=?
 Insert 0: insert into bet (risk_level, amount, user_id, bet_id) values (?, ?, ?, ?)
 Update 0: update bet set risk_level=?, amount=?, user_id=? where bet_id=?
 Delete 0: delete from bet where bet_id=?
 Identity insert: insert into bet (risk_level, amount, user_id) values (?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40d848f9]
Visiting attribute path : riskLevel
Visiting attribute path : amount
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.Bet)
    - Returns
       - EntityReturnImpl(entity=persistant.Bet, querySpaceUid=<gen:0>, path=persistant.Bet)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.Bet)
          - SQL table alias mapping - bet0_
          - alias suffix - 0_
          - suffixed key columns - {bet_id1_0_0_}

Static select for entity persistant.Bet [NONE]: select bet0_.bet_id as bet_id1_0_0_, bet0_.risk_level as risk_lev2_0_0_, bet0_.amount as amount3_0_0_, bet0_.user_id as user_id4_0_0_ from bet bet0_ where bet0_.bet_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d3691e1]
Visiting attribute path : riskLevel
Visiting attribute path : amount
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.Bet)
    - Returns
       - EntityReturnImpl(entity=persistant.Bet, querySpaceUid=<gen:0>, path=persistant.Bet)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.Bet)
          - SQL table alias mapping - bet0_
          - alias suffix - 0_
          - suffixed key columns - {bet_id1_0_0_}

Static select for entity persistant.Bet [READ]: select bet0_.bet_id as bet_id1_0_0_, bet0_.risk_level as risk_lev2_0_0_, bet0_.amount as amount3_0_0_, bet0_.user_id as user_id4_0_0_ from bet bet0_ where bet0_.bet_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44bc2449]
Visiting attribute path : riskLevel
Visiting attribute path : amount
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.Bet)
    - Returns
       - EntityReturnImpl(entity=persistant.Bet, querySpaceUid=<gen:0>, path=persistant.Bet)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.Bet)
          - SQL table alias mapping - bet0_
          - alias suffix - 0_
          - suffixed key columns - {bet_id1_0_0_}

Static select for entity persistant.Bet [UPGRADE]: select bet0_.bet_id as bet_id1_0_0_, bet0_.risk_level as risk_lev2_0_0_, bet0_.amount as amount3_0_0_, bet0_.user_id as user_id4_0_0_ from bet bet0_ where bet0_.bet_id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7558c24b]
Visiting attribute path : riskLevel
Visiting attribute path : amount
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.Bet)
    - Returns
       - EntityReturnImpl(entity=persistant.Bet, querySpaceUid=<gen:0>, path=persistant.Bet)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.Bet)
          - SQL table alias mapping - bet0_
          - alias suffix - 0_
          - suffixed key columns - {bet_id1_0_0_}

Static select for entity persistant.Bet [UPGRADE_NOWAIT]: select bet0_.bet_id as bet_id1_0_0_, bet0_.risk_level as risk_lev2_0_0_, bet0_.amount as amount3_0_0_, bet0_.user_id as user_id4_0_0_ from bet bet0_ where bet0_.bet_id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f129467]
Visiting attribute path : riskLevel
Visiting attribute path : amount
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.Bet)
    - Returns
       - EntityReturnImpl(entity=persistant.Bet, querySpaceUid=<gen:0>, path=persistant.Bet)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.Bet)
          - SQL table alias mapping - bet0_
          - alias suffix - 0_
          - suffixed key columns - {bet_id1_0_0_}

Static select for entity persistant.Bet [UPGRADE_SKIPLOCKED]: select bet0_.bet_id as bet_id1_0_0_, bet0_.risk_level as risk_lev2_0_0_, bet0_.amount as amount3_0_0_, bet0_.user_id as user_id4_0_0_ from bet bet0_ where bet0_.bet_id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26457986]
Visiting attribute path : riskLevel
Visiting attribute path : amount
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.Bet)
    - Returns
       - EntityReturnImpl(entity=persistant.Bet, querySpaceUid=<gen:0>, path=persistant.Bet)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.Bet)
          - SQL table alias mapping - bet0_
          - alias suffix - 0_
          - suffixed key columns - {bet_id1_0_0_}

Static select for entity persistant.Bet [FORCE]: select bet0_.bet_id as bet_id1_0_0_, bet0_.risk_level as risk_lev2_0_0_, bet0_.amount as amount3_0_0_, bet0_.user_id as user_id4_0_0_ from bet bet0_ where bet0_.bet_id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2faa55bb]
Visiting attribute path : riskLevel
Visiting attribute path : amount
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.Bet)
    - Returns
       - EntityReturnImpl(entity=persistant.Bet, querySpaceUid=<gen:0>, path=persistant.Bet)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.Bet)
          - SQL table alias mapping - bet0_
          - alias suffix - 0_
          - suffixed key columns - {bet_id1_0_0_}

Static select for entity persistant.Bet [PESSIMISTIC_READ]: select bet0_.bet_id as bet_id1_0_0_, bet0_.risk_level as risk_lev2_0_0_, bet0_.amount as amount3_0_0_, bet0_.user_id as user_id4_0_0_ from bet bet0_ where bet0_.bet_id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d1d9d73]
Visiting attribute path : riskLevel
Visiting attribute path : amount
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.Bet)
    - Returns
       - EntityReturnImpl(entity=persistant.Bet, querySpaceUid=<gen:0>, path=persistant.Bet)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.Bet)
          - SQL table alias mapping - bet0_
          - alias suffix - 0_
          - suffixed key columns - {bet_id1_0_0_}

Static select for entity persistant.Bet [PESSIMISTIC_WRITE]: select bet0_.bet_id as bet_id1_0_0_, bet0_.risk_level as risk_lev2_0_0_, bet0_.amount as amount3_0_0_, bet0_.user_id as user_id4_0_0_ from bet bet0_ where bet0_.bet_id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@764a3e5d]
Visiting attribute path : riskLevel
Visiting attribute path : amount
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.Bet)
    - Returns
       - EntityReturnImpl(entity=persistant.Bet, querySpaceUid=<gen:0>, path=persistant.Bet)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.Bet)
          - SQL table alias mapping - bet0_
          - alias suffix - 0_
          - suffixed key columns - {bet_id1_0_0_}

Static select for entity persistant.Bet [PESSIMISTIC_FORCE_INCREMENT]: select bet0_.bet_id as bet_id1_0_0_, bet0_.risk_level as risk_lev2_0_0_, bet0_.amount as amount3_0_0_, bet0_.user_id as user_id4_0_0_ from bet bet0_ where bet0_.bet_id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5db3d57c]
Visiting attribute path : riskLevel
Visiting attribute path : amount
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.Bet)
    - Returns
       - EntityReturnImpl(entity=persistant.Bet, querySpaceUid=<gen:0>, path=persistant.Bet)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.Bet)
          - SQL table alias mapping - bet0_
          - alias suffix - 0_
          - suffixed key columns - {bet_id1_0_0_}

Static select for entity persistant.Bet [OPTIMISTIC]: select bet0_.bet_id as bet_id1_0_0_, bet0_.risk_level as risk_lev2_0_0_, bet0_.amount as amount3_0_0_, bet0_.user_id as user_id4_0_0_ from bet bet0_ where bet0_.bet_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ba6ff5]
Visiting attribute path : riskLevel
Visiting attribute path : amount
Visiting attribute path : userName
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.Bet)
    - Returns
       - EntityReturnImpl(entity=persistant.Bet, querySpaceUid=<gen:0>, path=persistant.Bet)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.Bet)
          - SQL table alias mapping - bet0_
          - alias suffix - 0_
          - suffixed key columns - {bet_id1_0_0_}

Static select for entity persistant.Bet [OPTIMISTIC_FORCE_INCREMENT]: select bet0_.bet_id as bet_id1_0_0_, bet0_.risk_level as risk_lev2_0_0_, bet0_.amount as amount3_0_0_, bet0_.user_id as user_id4_0_0_ from bet bet0_ where bet0_.bet_id=?
Static select for action ACTION_MERGE on entity persistant.Bet: select bet0_.bet_id as bet_id1_0_0_, bet0_.risk_level as risk_lev2_0_0_, bet0_.amount as amount3_0_0_, bet0_.user_id as user_id4_0_0_ from bet bet0_ where bet0_.bet_id=?
Static select for action ACTION_REFRESH on entity persistant.Bet: select bet0_.bet_id as bet_id1_0_0_, bet0_.risk_level as risk_lev2_0_0_, bet0_.amount as amount3_0_0_, bet0_.user_id as user_id4_0_0_ from bet bet0_ where bet0_.bet_id=?
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@250d440
Registering SessionFactory: ab6692d1-4be1-42a8-a28e-7903b0d62c51 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: false
rolling back
rolled JDBC Connection
Hibernate Exception in updating user info
org.hibernate.TransientObjectException: The given object has a null identifier: persistant.User
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.getUpdateId(DefaultSaveOrUpdateEventListener.java:270)
	at org.hibernate.event.internal.DefaultUpdateEventListener.getUpdateId(DefaultUpdateEventListener.java:70)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsDetached(DefaultSaveOrUpdateEventListener.java:238)
	at org.hibernate.event.internal.DefaultUpdateEventListener.performSaveOrUpdate(DefaultUpdateEventListener.java:55)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:90)
	at org.hibernate.internal.SessionImpl.fireUpdate(SessionImpl.java:739)
	at org.hibernate.internal.SessionImpl.update(SessionImpl.java:731)
	at org.hibernate.internal.SessionImpl.update(SessionImpl.java:726)
	at db.services.DbService.update(DbService.java:144)
	at persistant.User.setFailedLogins(User.java:152)
	at servlet.LoginServlet.doPost(LoginServlet.java:50)
	at LoginServletTests.testValidLogin(LoginServletTests.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Releasing JDBC connection
Released JDBC connection
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: false
rolling back
rolled JDBC Connection
Hibernate Exception in updating user info
org.hibernate.TransientObjectException: The given object has a null identifier: persistant.User
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.getUpdateId(DefaultSaveOrUpdateEventListener.java:270)
	at org.hibernate.event.internal.DefaultUpdateEventListener.getUpdateId(DefaultUpdateEventListener.java:70)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsDetached(DefaultSaveOrUpdateEventListener.java:238)
	at org.hibernate.event.internal.DefaultUpdateEventListener.performSaveOrUpdate(DefaultUpdateEventListener.java:55)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:90)
	at org.hibernate.internal.SessionImpl.fireUpdate(SessionImpl.java:739)
	at org.hibernate.internal.SessionImpl.update(SessionImpl.java:731)
	at org.hibernate.internal.SessionImpl.update(SessionImpl.java:726)
	at db.services.DbService.update(DbService.java:144)
	at persistant.User.setFailedLogins(User.java:152)
	at servlet.LoginServlet.doPost(LoginServlet.java:56)
	at LoginServletTests.testInvalidLogin(LoginServletTests.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Releasing JDBC connection
Released JDBC connection
