Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding type registration boolean -> org.hibernate.type.BooleanType@453da22c
Adding type registration boolean -> org.hibernate.type.BooleanType@453da22c
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@453da22c
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6e38921c
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3c0a50da
Adding type registration yes_no -> org.hibernate.type.YesNoType@19dc67c2
Adding type registration byte -> org.hibernate.type.ByteType@5d20e46
Adding type registration byte -> org.hibernate.type.ByteType@5d20e46
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5d20e46
Adding type registration character -> org.hibernate.type.CharacterType@4d339552
Adding type registration char -> org.hibernate.type.CharacterType@4d339552
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d339552
Adding type registration short -> org.hibernate.type.ShortType@35fc6dc4
Adding type registration short -> org.hibernate.type.ShortType@35fc6dc4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@35fc6dc4
Adding type registration integer -> org.hibernate.type.IntegerType@1b68b9a4
Adding type registration int -> org.hibernate.type.IntegerType@1b68b9a4
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b68b9a4
Adding type registration long -> org.hibernate.type.LongType@6279cee3
Adding type registration long -> org.hibernate.type.LongType@6279cee3
Adding type registration java.lang.Long -> org.hibernate.type.LongType@6279cee3
Adding type registration float -> org.hibernate.type.FloatType@2357d90a
Adding type registration float -> org.hibernate.type.FloatType@2357d90a
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2357d90a
Adding type registration double -> org.hibernate.type.DoubleType@157632c9
Adding type registration double -> org.hibernate.type.DoubleType@157632c9
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@157632c9
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@589b3632
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@589b3632
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2890c451
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2890c451
Adding type registration string -> org.hibernate.type.StringType@25b485ba
Adding type registration java.lang.String -> org.hibernate.type.StringType@25b485ba
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@25a65b77
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5af97850
Adding type registration url -> org.hibernate.type.UrlType@e50a6f6
Adding type registration java.net.URL -> org.hibernate.type.UrlType@e50a6f6
Adding type registration date -> org.hibernate.type.DateType@2aa5fe93
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2aa5fe93
Adding type registration time -> org.hibernate.type.TimeType@d83da2e
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d83da2e
Adding type registration timestamp -> org.hibernate.type.TimestampType@501edcf1
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@501edcf1
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@501edcf1
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@27c86f2d
Adding type registration calendar -> org.hibernate.type.CalendarType@4c15e7fd
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c15e7fd
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c15e7fd
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f1302d6
Adding type registration locale -> org.hibernate.type.LocaleType@60dcc9fe
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@60dcc9fe
Adding type registration currency -> org.hibernate.type.CurrencyType@4c1d9d4b
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4c1d9d4b
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2928854b
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2928854b
Adding type registration class -> org.hibernate.type.ClassType@1fe20588
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1fe20588
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6b26e945
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6b26e945
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6dbb137d
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@56de5251
Adding type registration binary -> org.hibernate.type.BinaryType@7ee955a8
Adding type registration byte[] -> org.hibernate.type.BinaryType@7ee955a8
Adding type registration [B -> org.hibernate.type.BinaryType@7ee955a8
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@670002
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@670002
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@670002
Adding type registration image -> org.hibernate.type.ImageType@1ed1993a
Adding type registration characters -> org.hibernate.type.CharArrayType@4b14c583
Adding type registration char[] -> org.hibernate.type.CharArrayType@4b14c583
Adding type registration [C -> org.hibernate.type.CharArrayType@4b14c583
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1184ab05
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1184ab05
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1184ab05
Adding type registration text -> org.hibernate.type.TextType@36c88a32
Adding type registration ntext -> org.hibernate.type.NTextType@78b66d36
Adding type registration blob -> org.hibernate.type.BlobType@19bb07ed
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@19bb07ed
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@67a20f67
Adding type registration clob -> org.hibernate.type.ClobType@39529185
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@39529185
Adding type registration nclob -> org.hibernate.type.NClobType@1dde4cb2
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1dde4cb2
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@56620197
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@192d43ce
Adding type registration serializable -> org.hibernate.type.SerializableType@402bba4f
Adding type registration object -> org.hibernate.type.ObjectType@6aba2b86
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6aba2b86
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7c729a55
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3bb9a3ff
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@661972b0
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5af3afd9
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@323b36e0
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@44ebcd03
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@694abbdc
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e005c4b
HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
HHH000412: Hibernate Core {4.3.7.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH000043: Configuring from resource: /hibernate.cfg.xml
HHH000040: Configuration resource: /hibernate.cfg.xml
Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
hibernate.dialect=org.hibernate.dialect.MySQLDialect
hibernate.connection.driver_class=com.mysql.jdbc.Driver
hibernate.connection.url=jdbc:mysql://sql4.freesqldatabase.com/sql457634
hibernate.connection.username=sql457634
hibernate.connection.password=qJ4*nP7*
Session-factory config [null] named resource [User.hbm.xml] for mapping
HHH000221: Reading mappings from resource: User.hbm.xml
Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
Located [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd] in classpath
HHH000041: Configured SessionFactory: null
Properties: {hibernate.connection.password=qJ4*nP7*, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jre8\bin, java.vm.version=25.5-b02, hibernate.connection.username=sql457634, user.country.format=MT, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Brian\Documents\University\Third Year\Software Testing\Software.Testing, java.runtime.version=1.8.0_05-b13, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jre8\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\Brian\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jre8\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\iis express\PHP\v5.3;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\MATLAB\R2012b\runtime\win64;C:\Program Files\MATLAB\R2012b\bin;C:\Program Files\Microsoft Windows Performance Toolkit\;C:\Program Files (x86)\MiKTeX 2.9\miktex\bin\;C:\Program Files (x86)\Java\jdk1.8.0_05\bin;C:\Program Files (x86)\Java\jre7\bin;C:\Program Files (x86)\Java\jdk1.8.0_05\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.2.3\bin;C:\Program Files\Java\jdk1.7.0_51\bin;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\Brian, user.timezone=Europe/Berlin, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1252, java.specification.version=1.8, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.class.path=C:\Users\Brian\Documents\University\Third Year\Software Testing\Software.Testing\target\test-classes;C:\Users\Brian\Documents\University\Third Year\Software Testing\Software.Testing\target\classes;C:\Users\Brian\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\Brian\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Brian\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Brian\.m2\repository\org\hibernate\hibernate-core\4.3.7.Final\hibernate-core-4.3.7.Final.jar;C:\Users\Brian\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\Brian\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\Brian\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\Brian\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Brian\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Brian\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\Brian\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Brian\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\Brian\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Brian\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\Brian\.m2\repository\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;C:\Users\Brian\.m2\repository\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;C:\Users\Brian\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Brian\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\Brian\.m2\repository\org\apache\commons\commons-lang3\3.0\commons-lang3-3.0.jar;C:\Users\Brian\.m2\repository\joda-time\joda-time\2.5\joda-time-2.5.jar;C:\Users\Brian\.m2\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;/C:/Program Files (x86)/eclipse-standard-kepler-SR2-win32-x86_64/eclipse/configuration/org.eclipse.osgi/bundles/846/1/.cp/;/C:/Program Files (x86)/eclipse-standard-kepler-SR2-win32-x86_64/eclipse/configuration/org.eclipse.osgi/bundles/845/1/.cp/;C:\Program Files (x86)\eclipse-standard-kepler-SR2-win32-x86_64\eclipse\configuration\org.eclipse.osgi\bundles\1431\1\.cp\jacocoagent.jar, user.name=Brian, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.8, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 8499 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames UserValidatorTests, java.home=C:\Program Files\Java\jre8, sun.arch.data.model=64, hibernate.connection.url=jdbc:mysql://sql4.freesqldatabase.com/sql457634, hibernate.dialect=org.hibernate.dialect.MySQLDialect, user.language=en, java.specification.vendor=Oracle Corporation, user.language.format=mt, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_05, java.ext.dirs=C:\Program Files\Java\jre8\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre8\lib\resources.jar;C:\Program Files\Java\jre8\lib\rt.jar;C:\Program Files\Java\jre8\lib\sunrsasign.jar;C:\Program Files\Java\jre8\lib\jsse.jar;C:\Program Files\Java\jre8\lib\jce.jar;C:\Program Files\Java\jre8\lib\charsets.jar;C:\Program Files\Java\jre8\lib\jfr.jar;C:\Program Files\Java\jre8\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Preparing to build session factory with filters : {}
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://sql4.freesqldatabase.com/sql457634]
HHH000046: Connection properties: {user=sql457634, password=qJ4*nP7*}
HHH000006: Autocommit mode: false
HHH000115: Hibernate connection pool size: 20 (min=1)
Initializing Connection pool with 1 Connections
Database ->
       name : MySQL
    version : 5.5.38-0ubuntu0.12.04.1
      major : 5
      minor : 5
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Processing hbm.xml files
Mapping class: persistant.User -> user
Mapped property: username -> username
Mapped property: password -> password
Mapped property: name -> name
Mapped property: surname -> surname
Mapped property: dob -> dob
Mapped property: creditCardNumber -> credit_card_number
Mapped property: expiry -> expiry_date
Mapped property: cvv -> cvv
Mapped property: premium -> premium
Mapped property: free -> free
Mapped property: failedLogins -> failed_login
Mapped property: lockedTill -> locked_till
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000399: Using default transaction strategy (direct JDBC transactions)
Using BatchFetchStyle : LEGACY
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Default null ordering: none
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: disabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
JTA Track by Thread: enabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=qJ4*nP7*, sun.boot.library.path=C:\Program Files\Java\jre8\bin, java.vm.version=25.5-b02, hibernate.connection.username=sql457634, user.country.format=MT, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Brian\Documents\University\Third Year\Software Testing\Software.Testing, java.runtime.version=1.8.0_05-b13, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jre8\lib\endorsed, os.arch=amd64, java.io.tmpdir=C:\Users\Brian\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8.1, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jre8\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\iis express\PHP\v5.3;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\MATLAB\R2012b\runtime\win64;C:\Program Files\MATLAB\R2012b\bin;C:\Program Files\Microsoft Windows Performance Toolkit\;C:\Program Files (x86)\MiKTeX 2.9\miktex\bin\;C:\Program Files (x86)\Java\jdk1.8.0_05\bin;C:\Program Files (x86)\Java\jre7\bin;C:\Program Files (x86)\Java\jdk1.8.0_05\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.2.3\bin;C:\Program Files\Java\jdk1.7.0_51\bin;., java.specification.name=Java Platform API Specification, java.class.version=52.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.3, user.home=C:\Users\Brian, user.timezone=Europe/Berlin, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.8, file.encoding=Cp1252, hibernate.connection.driver_class=com.mysql.jdbc.Driver, user.name=Brian, java.class.path=C:\Users\Brian\Documents\University\Third Year\Software Testing\Software.Testing\target\test-classes;C:\Users\Brian\Documents\University\Third Year\Software Testing\Software.Testing\target\classes;C:\Users\Brian\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\Brian\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Brian\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Brian\.m2\repository\org\hibernate\hibernate-core\4.3.7.Final\hibernate-core-4.3.7.Final.jar;C:\Users\Brian\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;C:\Users\Brian\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;C:\Users\Brian\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;C:\Users\Brian\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Brian\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Brian\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.5.Final\hibernate-commons-annotations-4.0.5.Final.jar;C:\Users\Brian\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\Brian\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\Brian\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Brian\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;C:\Users\Brian\.m2\repository\org\slf4j\slf4j-log4j12\1.7.7\slf4j-log4j12-1.7.7.jar;C:\Users\Brian\.m2\repository\org\slf4j\slf4j-api\1.7.7\slf4j-api-1.7.7.jar;C:\Users\Brian\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Brian\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar;C:\Users\Brian\.m2\repository\org\apache\commons\commons-lang3\3.0\commons-lang3-3.0.jar;C:\Users\Brian\.m2\repository\joda-time\joda-time\2.5\joda-time-2.5.jar;C:\Users\Brian\.m2\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;/C:/Program Files (x86)/eclipse-standard-kepler-SR2-win32-x86_64/eclipse/configuration/org.eclipse.osgi/bundles/846/1/.cp/;/C:/Program Files (x86)/eclipse-standard-kepler-SR2-win32-x86_64/eclipse/configuration/org.eclipse.osgi/bundles/845/1/.cp/;C:\Program Files (x86)\eclipse-standard-kepler-SR2-win32-x86_64\eclipse\configuration\org.eclipse.osgi\bundles\1431\1\.cp\jacocoagent.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=C:\Program Files\Java\jre8, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 8499 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames UserValidatorTests, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://sql4.freesqldatabase.com/sql457634, java.specification.vendor=Oracle Corporation, user.language=en, user.language.format=mt, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_05, java.ext.dirs=C:\Program Files\Java\jre8\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre8\lib\resources.jar;C:\Program Files\Java\jre8\lib\rt.jar;C:\Program Files\Java\jre8\lib\sunrsasign.jar;C:\Program Files\Java\jre8\lib\jsse.jar;C:\Program Files\Java\jre8\lib\jce.jar;C:\Program Files\Java\jre8\lib\charsets.jar;C:\Program Files\Java\jre8\lib\jfr.jar;C:\Program Files\Java\jre8\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
Skipping JACC integration as it was not enabled
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: persistant.User
 Version select: select username from user where username =?
 Snapshot select: select user_.username, user_.password as password2_0_, user_.name as name3_0_, user_.surname as surname4_0_, user_.dob as dob5_0_, user_.credit_card_number as credit_c6_0_, user_.expiry_date as expiry_d7_0_, user_.cvv as cvv8_0_, user_.premium as premium9_0_, user_.free as free10_0_, user_.failed_login as failed_11_0_, user_.locked_till as locked_12_0_ from user user_ where user_.username=?
 Insert 0: insert into user (password, name, surname, dob, credit_card_number, expiry_date, cvv, premium, free, failed_login, locked_till, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update user set password=?, name=?, surname=?, dob=?, credit_card_number=?, expiry_date=?, cvv=?, premium=?, free=?, failed_login=?, locked_till=? where username=?
 Delete 0: delete from user where username=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e62cfa3]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_0_0_}

Static select for entity persistant.User [NONE]: select user0_.username as username1_0_0_, user0_.password as password2_0_0_, user0_.name as name3_0_0_, user0_.surname as surname4_0_0_, user0_.dob as dob5_0_0_, user0_.credit_card_number as credit_c6_0_0_, user0_.expiry_date as expiry_d7_0_0_, user0_.cvv as cvv8_0_0_, user0_.premium as premium9_0_0_, user0_.free as free10_0_0_, user0_.failed_login as failed_11_0_0_, user0_.locked_till as locked_12_0_0_ from user user0_ where user0_.username=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d299393]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_0_0_}

Static select for entity persistant.User [READ]: select user0_.username as username1_0_0_, user0_.password as password2_0_0_, user0_.name as name3_0_0_, user0_.surname as surname4_0_0_, user0_.dob as dob5_0_0_, user0_.credit_card_number as credit_c6_0_0_, user0_.expiry_date as expiry_d7_0_0_, user0_.cvv as cvv8_0_0_, user0_.premium as premium9_0_0_, user0_.free as free10_0_0_, user0_.failed_login as failed_11_0_0_, user0_.locked_till as locked_12_0_0_ from user user0_ where user0_.username=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b4d4327]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_0_0_}

Static select for entity persistant.User [UPGRADE]: select user0_.username as username1_0_0_, user0_.password as password2_0_0_, user0_.name as name3_0_0_, user0_.surname as surname4_0_0_, user0_.dob as dob5_0_0_, user0_.credit_card_number as credit_c6_0_0_, user0_.expiry_date as expiry_d7_0_0_, user0_.cvv as cvv8_0_0_, user0_.premium as premium9_0_0_, user0_.free as free10_0_0_, user0_.failed_login as failed_11_0_0_, user0_.locked_till as locked_12_0_0_ from user user0_ where user0_.username=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@671ea6ff]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_0_0_}

Static select for entity persistant.User [UPGRADE_NOWAIT]: select user0_.username as username1_0_0_, user0_.password as password2_0_0_, user0_.name as name3_0_0_, user0_.surname as surname4_0_0_, user0_.dob as dob5_0_0_, user0_.credit_card_number as credit_c6_0_0_, user0_.expiry_date as expiry_d7_0_0_, user0_.cvv as cvv8_0_0_, user0_.premium as premium9_0_0_, user0_.free as free10_0_0_, user0_.failed_login as failed_11_0_0_, user0_.locked_till as locked_12_0_0_ from user user0_ where user0_.username=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dc769f9]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_0_0_}

Static select for entity persistant.User [UPGRADE_SKIPLOCKED]: select user0_.username as username1_0_0_, user0_.password as password2_0_0_, user0_.name as name3_0_0_, user0_.surname as surname4_0_0_, user0_.dob as dob5_0_0_, user0_.credit_card_number as credit_c6_0_0_, user0_.expiry_date as expiry_d7_0_0_, user0_.cvv as cvv8_0_0_, user0_.premium as premium9_0_0_, user0_.free as free10_0_0_, user0_.failed_login as failed_11_0_0_, user0_.locked_till as locked_12_0_0_ from user user0_ where user0_.username=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9b5f3c7]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_0_0_}

Static select for entity persistant.User [FORCE]: select user0_.username as username1_0_0_, user0_.password as password2_0_0_, user0_.name as name3_0_0_, user0_.surname as surname4_0_0_, user0_.dob as dob5_0_0_, user0_.credit_card_number as credit_c6_0_0_, user0_.expiry_date as expiry_d7_0_0_, user0_.cvv as cvv8_0_0_, user0_.premium as premium9_0_0_, user0_.free as free10_0_0_, user0_.failed_login as failed_11_0_0_, user0_.locked_till as locked_12_0_0_ from user user0_ where user0_.username=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61ae0d43]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_0_0_}

Static select for entity persistant.User [PESSIMISTIC_READ]: select user0_.username as username1_0_0_, user0_.password as password2_0_0_, user0_.name as name3_0_0_, user0_.surname as surname4_0_0_, user0_.dob as dob5_0_0_, user0_.credit_card_number as credit_c6_0_0_, user0_.expiry_date as expiry_d7_0_0_, user0_.cvv as cvv8_0_0_, user0_.premium as premium9_0_0_, user0_.free as free10_0_0_, user0_.failed_login as failed_11_0_0_, user0_.locked_till as locked_12_0_0_ from user user0_ where user0_.username=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@287ae90c]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_0_0_}

Static select for entity persistant.User [PESSIMISTIC_WRITE]: select user0_.username as username1_0_0_, user0_.password as password2_0_0_, user0_.name as name3_0_0_, user0_.surname as surname4_0_0_, user0_.dob as dob5_0_0_, user0_.credit_card_number as credit_c6_0_0_, user0_.expiry_date as expiry_d7_0_0_, user0_.cvv as cvv8_0_0_, user0_.premium as premium9_0_0_, user0_.free as free10_0_0_, user0_.failed_login as failed_11_0_0_, user0_.locked_till as locked_12_0_0_ from user user0_ where user0_.username=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fcee3d9]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_0_0_}

Static select for entity persistant.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.username as username1_0_0_, user0_.password as password2_0_0_, user0_.name as name3_0_0_, user0_.surname as surname4_0_0_, user0_.dob as dob5_0_0_, user0_.credit_card_number as credit_c6_0_0_, user0_.expiry_date as expiry_d7_0_0_, user0_.cvv as cvv8_0_0_, user0_.premium as premium9_0_0_, user0_.free as free10_0_0_, user0_.failed_login as failed_11_0_0_, user0_.locked_till as locked_12_0_0_ from user user0_ where user0_.username=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@760487aa]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_0_0_}

Static select for entity persistant.User [OPTIMISTIC]: select user0_.username as username1_0_0_, user0_.password as password2_0_0_, user0_.name as name3_0_0_, user0_.surname as surname4_0_0_, user0_.dob as dob5_0_0_, user0_.credit_card_number as credit_c6_0_0_, user0_.expiry_date as expiry_d7_0_0_, user0_.cvv as cvv8_0_0_, user0_.premium as premium9_0_0_, user0_.free as free10_0_0_, user0_.failed_login as failed_11_0_0_, user0_.locked_till as locked_12_0_0_ from user user0_ where user0_.username=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49ca94a9]
Visiting attribute path : password
Visiting attribute path : name
Visiting attribute path : surname
Visiting attribute path : dob
Visiting attribute path : creditCardNumber
Visiting attribute path : expiry
Visiting attribute path : cvv
Visiting attribute path : premium
Visiting attribute path : free
Visiting attribute path : failedLogins
Visiting attribute path : lockedTill
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=persistant.User)
    - Returns
       - EntityReturnImpl(entity=persistant.User, querySpaceUid=<gen:0>, path=persistant.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=persistant.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {username1_0_0_}

Static select for entity persistant.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.username as username1_0_0_, user0_.password as password2_0_0_, user0_.name as name3_0_0_, user0_.surname as surname4_0_0_, user0_.dob as dob5_0_0_, user0_.credit_card_number as credit_c6_0_0_, user0_.expiry_date as expiry_d7_0_0_, user0_.cvv as cvv8_0_0_, user0_.premium as premium9_0_0_, user0_.free as free10_0_0_, user0_.failed_login as failed_11_0_0_, user0_.locked_till as locked_12_0_0_ from user user0_ where user0_.username=?
Static select for action ACTION_MERGE on entity persistant.User: select user0_.username as username1_0_0_, user0_.password as password2_0_0_, user0_.name as name3_0_0_, user0_.surname as surname4_0_0_, user0_.dob as dob5_0_0_, user0_.credit_card_number as credit_c6_0_0_, user0_.expiry_date as expiry_d7_0_0_, user0_.cvv as cvv8_0_0_, user0_.premium as premium9_0_0_, user0_.free as free10_0_0_, user0_.failed_login as failed_11_0_0_, user0_.locked_till as locked_12_0_0_ from user user0_ where user0_.username=?
Static select for action ACTION_REFRESH on entity persistant.User: select user0_.username as username1_0_0_, user0_.password as password2_0_0_, user0_.name as name3_0_0_, user0_.surname as surname4_0_0_, user0_.dob as dob5_0_0_, user0_.credit_card_number as credit_c6_0_0_, user0_.expiry_date as expiry_d7_0_0_, user0_.cvv as cvv8_0_0_, user0_.premium as premium9_0_0_, user0_.free as free10_0_0_, user0_.failed_login as failed_11_0_0_, user0_.locked_till as locked_12_0_0_ from user user0_ where user0_.username=?
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@554188ac
Registering SessionFactory: d4d76e64-20ee-41f1-94ad-cdf0d58bc15c (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
